"use strict";function UnsupportedFeatureError(){var e=Error.apply(this,arguments);e.name=this.name="UnsupportedFeatureError",this.stack=e.stack,e.message?this.message=e.message:this.message="AR World loading error : Your device does not support one or several of it's requested features."}UnsupportedFeatureError.prototype=Object.create(Error.prototype,{constructor:{value:UnsupportedFeatureError,writable:!0,configurable:!0}}),function(){function e(e){function r(e){w&&angular.isFunction(e)?e():v.push(e)}function t(){return console.log(Object.getOwnPropertyNames(m)),Object.getOwnPropertyNames(m)}function n(r,t){if("boolean"!=typeof r)throw new TypeError("Ionicitude - captureScreen() expects first parameter to be of type 'boolean', '"+typeof r+"' given.");if("string"!=typeof t)throw new TypeError("Ionicitude - captureScreen() expects second parameter to be 'null' or of type 'string', '"+typeof t+"' given.");var n=e.defer();return g.captureScreen(r,t,function(e){n.resolve(e)},function(e){n.reject(e)}),n.promise}function o(e,r){function t(e){if(m.hasOwnProperty(e))throw new SyntaxError("Ionicitude - addAction() - The name '"+e+"' has already been added or is a reserved Ionicitude name.")}if(angular.isString(e)){if(!r)throw new TypeError("Ionicitude - addAction() expects a second argument if first argument is of type 'string'.");if("function"!=typeof r)throw new TypeError("Ionicitude - addAction() expects second argument to only be of type 'function', '"+typeof r+"' given.");t(e),m[e]=r}else{if(!angular.isFunction(e))throw new TypeError("Ionicitude - addAction() expects first argument to be only of type 'string' or 'function', '"+typeof e+"' given");var n=e.name;if(!n)throw new TypeError("Ionicitude - addAction() do not accept anonymous function as first argument. Please, try passing a named function instead.");t(n),m[n]=e}return h}function i(){console.log("checking device");var r=e.defer();return g.isDeviceSupported(function(e){console.log(e),h.deviceSupportsFeatures=!0,r.resolve(e)},function(e){console.log(e),h.deviceSupportsFeatures=!1,r.reject(e)},b.reqFeatures),r.promise}function a(r){function t(){var e=l;o()&&(e=r.customCallback),g.setOnUrlInvokeCallback(e)}function n(){c()&&(b.reqFeatures=r.reqFeatures),s()&&(b.worldLoadConfig=r.worldLoadConfig),d()&&(b.worldsRootFolder=r.worldsRootFolder)}function o(){return r&&r.hasOwnProperty("customCallback")&&angular.isFunction(r.customCallback)}function a(){return!(r&&r.hasOwnProperty("doDeviceCheck")&&r.doDeviceCheck===!1)}function c(){return r&&r.hasOwnProperty("reqFeatures")&&angular.isArray(r.reqFeatures)}function s(){return r&&r.hasOwnProperty("worldLoadConfig")&&angular.isObject(r.worldLoadConfig)}function d(){return r&&r.hasOwnProperty("worldsRootFolder")&&angular.isString(r.worldsRootFolder)}return e(function(e,r){w?r("Ionicitude has already been initialized !"):(console.log("init service starting"),f().then(p).then(t).then(function(){return a()?i():console.log("check skipped due to init settings")}).then(n).then(function(){w=!0}).then(u).then(function(){console.log("end of initialization"),e(h)})["catch"](function(e){r(e)}))})}function c(r){if(r||(r="main"),h.deviceSupportsFeatures){var t=e.defer();return console.log("launch"),g.loadARchitectWorld(function(e){t.resolve(e)},function(e){t.reject(e)},s(r),b.reqFeatures,b.worldLoadConfig),t.promise}throw new UnsupportedFeatureError}function u(){v.forEach(function(e){angular.isFunction(e)&&e()}),v=[]}function s(e){return"www/"+b.worldsRootFolder+"/"+e+"/index.html"}function l(e){var r=d(e);if(console.log(e,r),!m.hasOwnProperty(r.funcName)||"function"!=typeof m[r.funcName])throw new TypeError("'"+r.funcName+"' is either undefined or not a function in the Ionicitude service.");m[r.funcName](g,r.parameters)}function d(e){if(e=decodeURI(e),e.substr(0,y.length)===y){var r={},t=e.substr(y.length),n=t.indexOf("?");if(-1===n)r.funcName=t,r.parameters=null;else try{r.funcName=t.substr(0,n);var o=t.substr(n+1);r.parameters=angular.fromJson(o)}catch(i){throw i instanceof SyntaxError?new SyntaxError("parseActionUrl() expects the substring following the '?' in the parameter string to be a valid JSON object. '"+o+"' given."):i}return r}throw new SyntaxError("parseActionUrl() expects first parameter to be a string starting with '"+y+"'.")}function f(){return e(function(e,r){g?r("Plugin already loaded !"):(g=cordova.require("com.wikitude.phonegap.WikitudePlugin.WikitudePlugin"),e("Plugin is loaded."))})}function p(){h.close=g.close,h.hide=g.hide,h.show=g.show,h.callJavaScript=g.callJavaScript,h.setLocation=g.setLocation}var g,h={checkDevice:i,deviceSupportsFeatures:!1,init:a,launchAR:c,addAction:o,listLibActions:t,captureScreen:n,ready:r,close:null,hide:null,show:null,callJavaScript:null,setLocation:null},w=!1,y="architectsdk://",m={},v=[],b={worldLoadConfig:{camera_position:"back"},reqFeatures:["geo","2d_tracking"],worldsRootFolder:"wikitude-worlds"};return h}e.$inject=["$q"],angular.module("IonicitudeModule",[]),angular.module("IonicitudeModule").factory("Ionicitude",e)}();